@import "tailwindcss";
@tailwind base;
@tailwind components;
@tailwind utilities;

*,
*::after,
*::before {
  box-sizing: border-box;
}

:root {
  --background: #fbfded;
  --foreground: #000000;
  --bar-width: 60px;
  --bar-height: 8px;
  --hamburger-gap: 6px;
  --foregroundburger: #333;
  --backgroundburger: white;
  --hamburger-margin: 8px;
  --animation-timing: 200ms ease-in-out;
  --hamburger-height: calc(var(--bar-height) * 3 + var(--hamburger-gap) * 2);
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@theme {
  --breakpoint-xs: 350px;
  --breakpoint-sm: 640px;
  --breakpoint-md: 768px;
  --breakpoint-lg: 1024px;
  --breakpoint-xl: 1280px;
  --breakpoint-2xl: 1536px;
  --breakpoint-3xl: 1900px;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #fbfded;
    --foreground: #000000;
    --radial-gradient-background: 250, 250, 250;
    --solid-color-background: 15, 15, 15;
    --overlay-color: 255, 255, 255;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

@layer utilities {
  @keyframes slideLeft {
    0% {
      transform: translateX(-100%);
      opacity: 0;
    }
    100% {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes slideRightImage {
    0% {
      transform: translateX(100%);
      opacity: 0;
    }
    100% {
      transform: translateX(0);
      opacity: 1;
    }
  }

  .animate-image-slideRight {
    animation: slideRightImage 1s ease-out forwards;
  }

  .animate-slideLeft {
    animation: slideLeft 1s ease-out forwards;
  }

  @keyframes slideDown {
    0% {
      transform: translateY(-200%);
      opacity: 0;
    }
    100% {
      transform: translateY(0);
      opacity: 1;
    }
  }

  @keyframes scaling-hero-anim {
    from {
      transform: scale(1.25);
    }
    to {
      transform: scale(1.1);
    }
  }

  @keyframes clip-hero-anim {
    from {
      clip-path: polygon(50% 50%, 50% 50%, 50% 50%, 50% 50%);
    }
    to {
      clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
    }
  }

  .animate-slideDown {
    animation: slideDown 1s ease-out forwards;
  }
}

.radial-gradient {
  background: radial-gradient(
      circle at 50% 0%,
      rgba(var(--radial-gradient-background), 0.05) 0%,
      transparent 60%
    )
    rgba(var(--solid-color-background), 1);
}

.linear-mask {
  mask-image: linear-gradient(
    -75deg,
    white calc(var(--x) + 20%),
    transparent calc(var(--x) + 30%),
    white calc(var(--x) + 100%)
  );
  -webkit-mask-image: linear-gradient(
    -75deg,
    white calc(var(--x) + 20%),
    transparent calc(var(--x) + 30%),
    white calc(var(--x) + 100%)
  );
}

.linear-overlay {
  background-image: linear-gradient(
    -75deg,
    rgba(var(--overlay-color), 0.1) calc(var(--x) + 20%),
    rgba(var(--overlay-color), 0.5) calc(var(--x) + 25%),
    rgba(var(--overlay-color), 0.1) calc(var(--x) + 100%)
  );
  mask: linear-gradient(black, black) content-box, linear-gradient(black, black);
  -webkit-mask: linear-gradient(black, black) content-box,
    linear-gradient(black, black);
  mask-composite: exclude;
  -webkit-mask-composite: xor;
}

.hamburger-menu {
  --x-width: calc(var(--hamburger-height) * 1.41421356237);

  display: flex;
  flex-direction: column;
  gap: var(--hamburger-gap);
  width: max-content;
  position: absolute;
  top: var(--hamburger-margin);
  right: var(--hamburger-margin);
  z-index: 999;
  cursor: pointer;
}

.hamburger-menu::before,
.hamburger-menu::after,
.hamburger-menu input {
  content: "";
  width: var(--bar-width);
  height: var(--bar-height);
  background-color: var(--foregroundburger);
  border-radius: 9999px;
  transform-origin: left center;
  transition: opacity var(--animation-timing), width var(--animation-timing),
    rotate var(--animation-timing), translate var(--animation-timing),
    background-color var(--animation-timing);
}

.hamburger-menu input {
  appearance: none;
  padding: 0;
  margin: 0;
  outline: none;
  pointer-events: none;
}

.hamburger-menu:has(input:checked)::before {
  rotate: 45deg;
  width: var(--x-width);
  translate: 0 calc(var(--bar-height) / -2);
}

.hamburger-menu:has(input:checked)::after {
  rotate: -45deg;
  width: var(--x-width);
  translate: 0 calc(var(--bar-height) / 2);
}

.hamburger-menu input:checked {
  opacity: 0;
  width: 0;
}

.sidebar {
  display: flex;
  flex-direction: column;
  overflow: hidden;
  inset: 0;
  padding-top: 25vh;
  justify-content: start;
  align-items: center;
  position: fixed;
  width: 100%;
  height: 100vh;
  top: 0;
  transition: translate var(--animation-timing);
  translate: 100%;
  /* background-color: rgb(214, 141, 4); */
  background-color: #d8ae02;
}

.hamburger-menu:has(input:checked) + .sidebar {
  translate: 0;
}
